myfunction <- function()  (
x <- rnorm(100)
mean(x)
)
myfunction <- function()  (
+     x <- rnorm(100)
)
myfunction(5)
myfunction()
myfunction <- function()  (
x <- rnorm(100)
)
myfunction()
add2 <- function(x,y) {
x + y
}
add2(3,5)
getwd()
setwd("asg_2")
ls
getwd()
source("source/so_soultion.R")
source("source/so_solution.R")
mat <- matrix(data = c(4,2,7,6), nrow = 2, ncol = 2)
mat
mat2 <- makeCacheMatrix(mat)
mat2
cacheSolve(mat2)
cacheSolve(mat2)
source("source/so_solution.R")
mat
mat2 <- makeCacheMatrix(mat)
cacheSolve(mat2)
class(mat2)
mat2
release(cacheSolve())
remove(cacheSolve())
remove(cacheSolve)
remove(makeCacheMatrix)
remove(mat)
remove(mat2)
mat
getwd()
setwd("git/ProgrammingAssignment2")
getwd()
source("cachmatrix.R")
source("cachematrix.R")
mat <- matrix(data = c(4,2,7,6), nrow = 2, ncol = 2)
mat2 <- makeCacheMatrix(mat)
cacheSolve(mat2)
mat
library(datasets)
data(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
colnames(mtcars)
sapply(split(mtcars$hp, mtcars$cyl), mean)
data(iris)
apply(iris[, 1:4], 2, mean)
colnames(iris)
iris[,Species=="virginica"]
iris[,$Species=="virginica"]
iris[,Species=="virginica"]
iris[Species=="virginica"]
iris[$Species=="virginica"]
iris[iris$Species=="virginica"]
iris[,iris$Species=="virginica"]
iris[iris$Species=="virginica",]
mean(iris[iris$Species=="virginica",])
mean(iris[iris$Species=="virginica",Sepal.Length])
mean(iris[iris$Species=="virginica",iris$Sepal.Length])
apply(iris[iris$Species=="virginica", 2, mean)
apply(iris[iris$Species=="virginica"], 2, mean)
apply(iris[iris$Species=="virginica"], 2, mean)
apply(iris[, 1:4], 2, mean)
apply(iris[iris$Species=="virginica",1], 2, mean)
iris[iris$Species=="virginica",]
subset <- iris[iris$Species=="virginica",]
apply(subset, 1:4], 2, mean)
apply(subset[, 1:4], 2, mean)
install.packages("swirl")
library(swirl)
swirl()
5 + 7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
z
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
